import{x as p,ak as a,V as o,aF as g,ah as s,ai as m,al as l}from"./index-eed032b4.js";import{f as c,d as n}from"./LayerView-8c849c97.js";import{i as d}from"./GraphicContainer-3acb95de.js";import{o as u}from"./GraphicsView2D-62e59b66.js";import"./Container-7664f554.js";import"./EffectView-f21b790b.js";import"./definitions-c49e2c1e.js";import"./enums-b14466b3.js";import"./Texture-b27e2ed5.js";import"./color-82eb9d53.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./BaseGraphicContainer-64e198ba.js";import"./FeatureContainer-4622de9f.js";import"./AttributeStoreView-1e813df9.js";import"./TiledDisplayObject-140c5b09.js";import"./WGLContainer-1ddd0e61.js";import"./VertexArrayObject-6676a928.js";import"./ProgramTemplate-c203c82b.js";import"./GeometryUtils-017e7c0c.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-3e9b4557.js";import"./visualVariablesUtils-8f78c9ca.js";import"./cimAnalyzer-249b67c5.js";import"./fontUtils-c4906c91.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./utils-fb8f30fc.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-7a483037.js";import"./floatRGBA-3a08c070.js";import"./ExpandedCIM-b2cd66b9.js";import"./clusterUtils-d077d77a.js";import"./util-83127115.js";import"./TileContainer-23df8a83.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtilsSync-0205a13e.js";import"./projectionSupport-b33ba616.js";import"./json-48e3ea08.js";import"./Matcher-2d1dc9bd.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-6feabd94.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-8aaf42ac.js";import"./ComputedAttributeStorage-bebfb184.js";import"./arcadeTimeUtils-12bfe600.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const ni=e;export{ni as default};
