import{x as p,al as a,V as o,aH as g,ai as s,aj as m,am as l}from"./index-efef4772.js";import{f as c,d as n}from"./LayerView-8810d71f.js";import{i as d}from"./GraphicContainer-e8dfd68f.js";import{o as u}from"./GraphicsView2D-8f8530bd.js";import"./Container-dc903d08.js";import"./EffectView-88cf4334.js";import"./definitions-838da113.js";import"./enums-b14466b3.js";import"./Texture-46a0d29f.js";import"./color-8a8b1498.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./BaseGraphicContainer-9510550c.js";import"./FeatureContainer-34b5ccc1.js";import"./AttributeStoreView-f5278c8f.js";import"./TiledDisplayObject-9730a14f.js";import"./WGLContainer-1a170e79.js";import"./VertexArrayObject-7660fad3.js";import"./ProgramTemplate-0a1f878c.js";import"./GeometryUtils-2c6d668c.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-00ef0f46.js";import"./visualVariablesUtils-fe0435c8.js";import"./cimAnalyzer-139e1e4c.js";import"./fontUtils-ace31181.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./utils-7685c378.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-ca0cc80d.js";import"./floatRGBA-94fad0a9.js";import"./ExpandedCIM-b55558c6.js";import"./util-066d9298.js";import"./TileContainer-ceba5fb3.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtilsSync-d204d375.js";import"./projectionSupport-ab9cb325.js";import"./json-48e3ea08.js";import"./Matcher-9cb7e617.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-fb05f5cb.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-3295b6c7.js";import"./ComputedAttributeStorage-4b162209.js";import"./arcadeTimeUtils-9f278e0b.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const ci=e;export{ci as default};
