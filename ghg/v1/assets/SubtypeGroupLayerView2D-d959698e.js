import{ai as m,am as d,z as u,B as y,g as h,cQ as c}from"./index-03946ec7.js";import b from"./FeatureLayerView2D-98cd8072.js";import"./EffectView-f80ea10d.js";import"./definitions-e7328148.js";import"./LayerView-129ed54e.js";import"./Container-22067ae8.js";import"./enums-b14466b3.js";import"./Texture-d0a2a46a.js";import"./AttributeStoreView-e4a40bac.js";import"./TiledDisplayObject-c9554654.js";import"./color-5406070d.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-07698e25.js";import"./VertexArrayObject-354b8b46.js";import"./ProgramTemplate-503e4e27.js";import"./GeometryUtils-4b12b5aa.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-432fba72.js";import"./visualVariablesUtils-c4f75e00.js";import"./cimAnalyzer-c6a6b42a.js";import"./fontUtils-bb45034d.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./utils-2c77cd42.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-5a3540a4.js";import"./floatRGBA-d52d0df9.js";import"./ExpandedCIM-c7e7cdbf.js";import"./util-f32dc3be.js";import"./BitmapTileContainer-74e49490.js";import"./Bitmap-6a1dbcb0.js";import"./TileContainer-44415971.js";import"./CircularArray-ef508845.js";import"./BufferPool-b632ff75.js";import"./FeatureContainer-7b6883ef.js";import"./popupUtils-7dd3cb3d.js";import"./RefreshableLayerView-c8b3aa91.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let a=class extends b{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var p;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((p=this.tileRenderer)==null?void 0:p.updating),n=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),n}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};a=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],a);const oe=a;export{oe as default};
