import{ai as m,am as d,z as u,B as y,g as h,cQ as c}from"./index-e5973b57.js";import b from"./FeatureLayerView2D-7695d4f1.js";import"./EffectView-b6dd8328.js";import"./definitions-c3d1333d.js";import"./LayerView-38cc892e.js";import"./Container-a4cf9d00.js";import"./enums-b14466b3.js";import"./Texture-a64cd0af.js";import"./AttributeStoreView-efbffaf0.js";import"./TiledDisplayObject-a9a8ada9.js";import"./color-fc59f67c.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-b0a90dc0.js";import"./VertexArrayObject-9e7dbad6.js";import"./ProgramTemplate-2d406836.js";import"./GeometryUtils-6c3f0209.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-70056802.js";import"./visualVariablesUtils-f34f48f8.js";import"./cimAnalyzer-d612a1cf.js";import"./fontUtils-2b05e912.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./utils-663907ae.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-cde352fa.js";import"./floatRGBA-8415f0b0.js";import"./ExpandedCIM-7f584703.js";import"./util-47e5b7af.js";import"./BitmapTileContainer-8a5ee5f5.js";import"./Bitmap-31db8bfc.js";import"./TileContainer-f1255f45.js";import"./CircularArray-ef508845.js";import"./BufferPool-9072da9b.js";import"./FeatureContainer-54fb47e9.js";import"./popupUtils-55bdac4e.js";import"./RefreshableLayerView-a23ceb7d.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let a=class extends b{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var p;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((p=this.tileRenderer)==null?void 0:p.updating),n=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),n}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};a=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],a);const oe=a;export{oe as default};
